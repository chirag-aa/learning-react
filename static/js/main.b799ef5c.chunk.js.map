{"version":3,"sources":["compoents/Nav.js","compoents/States.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","props","useState","backgroundColor","color","mode","setMode","toggleText","setToggleText","className","style","href","title","type","id","onClick","e","preventDefault","document","body","States","text","setText","placeholder","value","onChange","event","target","rows","newText","toUpperCase","toLowerCase","length","split","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"kNAuDeA,MApDf,SAAaC,GACT,MAAoBC,mBAAS,CACzBC,gBAAgB,QAChBC,MAAM,UAFV,mBAAMC,EAAN,KAAWC,EAAX,KAIA,EAAgCJ,mBAAS,oBAAzC,mBAAMK,EAAN,KAAiBC,EAAjB,KAoBA,OACI,qBAAKC,UAAU,0BAA0BC,MAAOL,EAAhD,SACI,sBAAKI,UAAU,kBAAf,UACI,mBAAGA,UAAU,eAAeC,MAAOL,EAAMM,KAAK,IAA9C,SAAmDV,EAAMW,QACzD,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,aAAa,gBAAc,YAAY,gBAAc,QAAQ,aAAW,oBAAlK,SACI,sBAAMJ,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2BK,GAAG,YAA7C,SACI,qBAAIL,UAAU,aAAd,UACI,oBAAIA,UAAU,WAAd,SACI,mBAAGA,UAAU,kBAAkBC,MAAOL,EAAM,eAAa,OAAOM,KAAK,IAArE,oBAEJ,oBAAIF,UAAU,WAAd,SACI,mBAAGA,UAAU,WAAWC,MAAOL,EAAMM,KAAK,IAA1C,0BAIJ,sBAAMF,UAAU,SAAhB,SACI,wBAAQA,UAAU,0BAA0BM,QArClD,SAACC,GACfA,EAAEC,iBACwB,UAAvBZ,EAAKF,iBACJG,EAAQ,CACJH,gBAAgB,QAChBC,MAAM,UAEVc,SAASC,KAAKT,MAAMP,gBAAgB,OACpCK,EAAc,sBAEa,UAAvBH,EAAKF,kBACTG,EAAQ,CACJH,gBAAgB,QAChBC,MAAM,UAEVc,SAASC,KAAKT,MAAMP,gBAAgB,QACpCK,EAAc,sBAqBE,SAAmED,YCPhFa,MArCf,WACI,MAAoBlB,mBAAS,IAA7B,mBAAMmB,EAAN,KAAWC,EAAX,KAiBA,OACI,mCACA,sBAAKb,UAAU,iBAAf,UACG,0BAAUA,UAAU,eAAec,YAAY,kBAAkBC,MAAOH,EAAMI,SAlBlE,SAACC,GAChBJ,EAAQI,EAAMC,OAAOH,QAiBoFI,KAAK,MAC3G,wBAAQf,KAAK,SAAUJ,UAAU,uBAAuBM,QAhB7C,WACd,IAAIc,EAAQR,EAAKS,cACjBR,EAAQO,IAcL,kCACA,wBAAQhB,KAAK,SAAUJ,UAAU,4BAA4BM,QAblD,WACX,IAAIc,EAAQR,EAAKU,cACjBT,EAAQO,IAWR,kCACA,wBAAQhB,KAAK,SAASJ,UAAU,4BAA4BM,QAVnD,WAEZO,EADY,KAST,wBACA,8CAGA,8BAAID,EAAKW,OAAT,iBACA,8BAAIX,EAAKY,MAAM,KAAKD,OAApB,YACA,yCACA,4BAAIX,UCpBAa,MAVf,WACE,OACE,qCACA,cAAC,EAAD,CAAKtB,MAAM,cACV,cAAC,EAAD,QCKUuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5B,SAAS6B,eAAe,SAM1BZ,K","file":"static/js/main.b799ef5c.chunk.js","sourcesContent":["\r\nimport React, {useState} from 'react'\r\n\r\nfunction Nav(props) {\r\n    const[mode,setMode]=useState({\r\n        backgroundColor:'white',\r\n        color:'black'\r\n    });\r\n    const[toggleText,setToggleText]=useState('Enable Dark Mode');\r\n    const modeHandler=(e)=>{\r\n        e.preventDefault();\r\n        if(mode.backgroundColor==='white'){\r\n            setMode({\r\n                backgroundColor:'black',\r\n                color:'white' \r\n            });\r\n            document.body.style.backgroundColor='gray';\r\n            setToggleText('Enable Light Mode');\r\n        }\r\n        else if(mode.backgroundColor==='black'){\r\n            setMode({\r\n                backgroundColor:'white',\r\n                color:'black'\r\n            });\r\n            document.body.style.backgroundColor='white';\r\n            setToggleText('Enable Dark Mode');\r\n        }\r\n    }\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg\" style={mode}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" style={mode} href=\"/\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" style={mode} aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" style={mode} href=\"#\">About</a>\r\n                        </li>\r\n                        </ul>\r\n                    </div>    \r\n                        <form className=\"d-flex\">\r\n                            <button className='btn btn-outline-success' onClick={modeHandler}>{toggleText}</button>\r\n                        </form>\r\n                    \r\n               \r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React,{useState} from 'react'\r\n\r\nfunction States() {\r\n    const[text,setText]=useState('');\r\n    \r\n    const handleChange=(event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    const doUpperCase=()=>{\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    const doLowerCase=()=>{\r\n           let newText=text.toLowerCase();\r\n           setText(newText);\r\n    }\r\n    const ClearText=()=>{\r\n        let newText='';\r\n        setText(newText);\r\n    }\r\n    return (\r\n        <>\r\n        <div className='container my-3'>\r\n           <textarea className=\"form-control\" placeholder=\"Enter Text Here\" value={text} onChange={handleChange} rows=\"8\"></textarea>\r\n           <button type='submit'  className='btn btn-primary my-3' onClick={doUpperCase}>Convert To UpperCase</button> \r\n           <button type='submit'  className='btn btn-primary my-3 mx-3' onClick={doLowerCase}>Convert To LowerCase</button> \r\n           <button type='submit' className='btn btn-warning my-3 mx-3' onClick={ClearText} >Clear Text</button>\r\n           <h2>\r\n               Text Summary\r\n           </h2>\r\n           <p>{text.length} Characters</p>\r\n           <p>{text.split(' ').length} Words</p>\r\n           <h2>Preview</h2>\r\n           <p>{text}</p>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default States\r\n","import './App.css';\nimport Nav from './compoents/Nav';\nimport States from './compoents/States';\nfunction App() {\n  return (\n    <>\n    <Nav title=\"TextUtils\"/>\n     <States/>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}